{"ast":null,"code":"var _jsxFileName = \"/Users/ibrakhimu/Desktop/skincare copy/src/pages/FaceScan.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FaceScan = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isModelLoaded, setIsModelLoaded] = useState(false);\n  useEffect(() => {\n    loadModel();\n  }, []);\n  const loadModel = async () => {\n    // Load the face landmark model here\n    // Set isModelLoaded to true once the model is loaded\n  };\n  const startWebcam = async () => {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing the webcam', error);\n      }\n    }\n  };\n  const detectFace = () => {\n    if (!isModelLoaded) {\n      console.log(\"Model not loaded yet\");\n      return;\n    }\n\n    // Use the face landmark model to detect faces\n    // Draw the results on the canvas\n  };\n  useEffect(() => {\n    if (isModelLoaded) {\n      startWebcam();\n    }\n  }, [isModelLoaded]);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.addEventListener('loadeddata', detectFace);\n    }\n    return () => {\n      if (videoRef.current) {\n        videoRef.current.removeEventListener('loadeddata', detectFace);\n      }\n    };\n  }, [isModelLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      playsInline: true,\n      style: {\n        transform: 'scaleX(-1)'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef /* Set canvas dimensions and styles here */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(FaceScan, \"tqXkDhW6QmlT4L011Dt0emYjaAw=\");\n_c = FaceScan;\nexport default FaceScan;\nvar _c;\n$RefreshReg$(_c, \"FaceScan\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","FaceScan","_s","videoRef","canvasRef","isModelLoaded","setIsModelLoaded","loadModel","startWebcam","navigator","mediaDevices","getUserMedia","stream","video","current","srcObject","error","console","detectFace","log","addEventListener","removeEventListener","children","ref","autoPlay","playsInline","style","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ibrakhimu/Desktop/skincare copy/src/pages/FaceScan.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst FaceScan = () => {\n    const videoRef = useRef(null);\n    const canvasRef = useRef(null);\n    const [isModelLoaded, setIsModelLoaded] = useState(false);\n\n    useEffect(() => {\n        loadModel();\n    }, []);\n\n    const loadModel = async () => {\n        // Load the face landmark model here\n        // Set isModelLoaded to true once the model is loaded\n    };\n\n    const startWebcam = async () => {\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n            } catch (error) {\n                console.error('Error accessing the webcam', error);\n            }\n        }\n    };\n\n    const detectFace = () => {\n        if (!isModelLoaded) {\n            console.log(\"Model not loaded yet\");\n            return;\n        }\n\n        // Use the face landmark model to detect faces\n        // Draw the results on the canvas\n    };\n\n    useEffect(() => {\n        if (isModelLoaded) {\n            startWebcam();\n        }\n    }, [isModelLoaded]);\n\n    useEffect(() => {\n        if (videoRef.current) {\n            videoRef.current.addEventListener('loadeddata', detectFace);\n        }\n\n        return () => {\n            if (videoRef.current) {\n                videoRef.current.removeEventListener('loadeddata', detectFace);\n            }\n        };\n    }, [isModelLoaded]);\n\n    return (\n        <div>\n            <video ref={videoRef} autoPlay playsInline style={{ transform: 'scaleX(-1)' }} />\n            <canvas ref={canvasRef} /* Set canvas dimensions and styles here */ />\n        </div>\n    );\n};\n\nexport default FaceScan;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMO,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEzDF,SAAS,CAAC,MAAM;IACZW,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B;IACA;EAAA,CACH;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAIC,SAAS,CAACC,YAAY,IAAID,SAAS,CAACC,YAAY,CAACC,YAAY,EAAE;MAC/D,IAAI;QACA,MAAMC,MAAM,GAAG,MAAMH,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEE,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,IAAIV,QAAQ,CAACW,OAAO,EAAE;UAClBX,QAAQ,CAACW,OAAO,CAACC,SAAS,GAAGH,MAAM;QACvC;MACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACtD;IACJ;EACJ,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACb,aAAa,EAAE;MAChBY,OAAO,CAACE,GAAG,CAAC,sBAAsB,CAAC;MACnC;IACJ;;IAEA;IACA;EACJ,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACZ,IAAIS,aAAa,EAAE;MACfG,WAAW,CAAC,CAAC;IACjB;EACJ,CAAC,EAAE,CAACH,aAAa,CAAC,CAAC;EAEnBT,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,CAACW,OAAO,EAAE;MAClBX,QAAQ,CAACW,OAAO,CAACM,gBAAgB,CAAC,YAAY,EAAEF,UAAU,CAAC;IAC/D;IAEA,OAAO,MAAM;MACT,IAAIf,QAAQ,CAACW,OAAO,EAAE;QAClBX,QAAQ,CAACW,OAAO,CAACO,mBAAmB,CAAC,YAAY,EAAEH,UAAU,CAAC;MAClE;IACJ,CAAC;EACL,CAAC,EAAE,CAACb,aAAa,CAAC,CAAC;EAEnB,oBACIL,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAOuB,GAAG,EAAEpB,QAAS;MAACqB,QAAQ;MAACC,WAAW;MAACC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAa;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjF/B,OAAA;MAAQuB,GAAG,EAAEnB,SAAU,CAAC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEd,CAAC;AAAC7B,EAAA,CA7DID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA+Dd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}